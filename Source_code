import java.util.ArrayList;
import java.util.Scanner;
public class M_Andersen_COSC251_Sp18_Project2 {
	 static Scanner userInput = new Scanner(System.in);
	 static String myName;
		public static void main(String[]args) {
			int theChoice = -1;
      //list of "tab" names that are used in the program edit to what you want
			String[] theList = new String[] {"Products","Services","Tools","Support","Contact","Manage Inventory"};
			System.out.println("Welcome to Air-Crazed INC. where you can find everything you will ever need for your aircraft.");
			System.out.println("Please enter your name: ");
			myName = userInput.nextLine();
			
			while(theChoice != 0) {
				System.out.println("Please enter the number of the menu you would like to enter " + myName + ": ");
				for(int i =0; i < theList.length; i++) {
					System.out.println((i +1) + " - " + theList[i]);
				}//end for
				System.out.println("0 - Exit");
				System.out.println();
				System.out.println("Enter your choice here: ");
				try {
					int answer1 = Integer.parseInt( userInput.nextLine() );
					
					switch(answer1) {
						case 0: 
							System.out.println("Have a nice day");
							theChoice = 0;
							break;
						case 1: 
							showProduct();
							break;
						
						case 2: 
							showServices();
							break;
						case 3: 
							showTools();
							break;
						case 4: 
							showSupport();
							break;
						case 5: 
							showContact();
							break;
						case 6:
							manageInventory();
							break;
					
					}// end switch
				}
				catch(NumberFormatException myEx) {
					System.out.println("Invalid input, try again");
				}
				
			}//end while
			
			
		}//end main
		
    //method that shows all the products offered by the business
		public static void showProduct() {
			boolean theLoop = false;
			String[] products = new String[]{"Business Jet", "Seaplane", "Taildragger", "Tiltrotor", "Turboprop","Helicopter","Glider","Ultralight","Single-engine Piston", "Stunt Plane"};
			while(!theLoop) {
				System.out.println("Select one of the following: ");
				System.out.println("1 - View Product List");
				System.out.println("2 - Use product selection tool");
				System.out.println("0 - Back");
				int listAnswer = Integer.parseInt( userInput.nextLine() );
				if(listAnswer == 0) {
					theLoop = true;
				}
				else if(listAnswer == 1) {
					System.out.println("Our list of products: ");
					for(int i = 0; i < products.length; i++) {
						System.out.println(products[i]);
					}
				}
				else if(listAnswer == 2) {
					selectionTool(myName);
				}
				else {
					System.out.println("That is an invalid option");
				}
			}
		}
    //method that shows what services are offered by the business, more can be added/removed as needed
		public static void showServices() {
			boolean theLoop = false;
			String[] services = new String[] {"Repair Service", "Relocation Service"};
			while(!theLoop) {
				System.out.println("Welcome to the Services Tab");
				System.out.println("What can we do for you today?");
				for(int i = 0; i < services.length; i++) {
					System.out.println((i + 1) + " - " + services[i]);
				}
				System.out.println("0 - Back");
				int theAnswer = Integer.parseInt( userInput.nextLine() );
				if(theAnswer == 0) {
					theLoop = true;
				}
				else if(theAnswer == 1) {
					System.out.println("You have selected our repair service!");
					System.out.println("Please enter what is wrong with your plane/helicopter in the following space");
					userInput.nextLine();
					System.out.println("Thank you, your repair request has been sent to our technician");
					
				}
				else if(theAnswer == 2) {
					System.out.println("Thank you for choosing our aircraft relocation service where we move your aircraft for free if you bought it from us!");
					System.out.println("Where would you like it moved to? Please enter in the space below.");
					userInput.nextLine();
					System.out.println("Thank you! One of our pilots will contact you within 24hrs to have your aircraft moved to your desired location");
				}
				else {
					System.out.println("That is an invalid option");
				}
				
			}
		}
    //tools that dont actually do anything but are more for show and fun can be removed if necessary 
		public static void showTools() {
			boolean theLoop = false;
			String[] tools = new String[] {"Remote Repairs Tool", "Remote Refueling Tool"};
			while(!theLoop) {
				System.out.println("Welcome to the Tools tab!");
				System.out.println("These are the tools that we offer: ");
				for(int i = 0; i < tools.length; i++) {
					System.out.println((i + 1) + " - " + tools[i]);
				}
				System.out.println("0 - Back");
				int theAnswer = Integer.parseInt( userInput.nextLine() );
				if(theAnswer == 0) {
					theLoop = true;
				}
				else if(theAnswer == 1) {
					System.out.println("Please enter the location of where you need repairs in the space below: ");
					
					userInput.nextLine();
					System.out.println("Thank you a repair truck will be sent out shortly.");
				}
				else if(theAnswer == 2) {
					System.out.println("Please enter the location of where you need a fuel truck to be sent in the space below: ");
					
					userInput.nextLine();
					System.out.println("Thank you a fuel truck will be sent out shortly");
				}
				else {
					System.out.println("That is an invalid option");
				}
			}
		}
    //support that doenst actually exist and more for show again, since the business is made up there is not actual support staff
		public static void showSupport() {
			boolean theLoop = false;
			while(!theLoop) {
				String[] support = new String[] {"Troubleshooting", "Our wiki"};
				System.out.println("Welcome to the support page!");
				for(int i = 0; i < support.length; i++) {
					System.out.println((i + 1) + " - " + support[i]);
				}
				System.out.println("0 - Back");
				System.out.println("What would you like to access: ");
				int theAnswer = Integer.parseInt( userInput.nextLine() );
				if(theAnswer == 0) {
					theLoop = true;
				}
				else if(theAnswer == 1) {
					System.out.println("Enter the issue below and we will see if we can help you: ");
					userInput.nextLine();
					System.out.println("Sorry that issue does not match our database");
				}
				else if(theAnswer == 2) {
					System.out.println("Connecting to wiki");
					for(int y = 0; y <=4; y++) {
						System.out.println("...");
					}
					System.out.println("Connection failed");
					
				}
				else {
					System.out.println("That is an invalid option");
				}
			}
		}
    //a method for storing/calling for the contact information of the made up business 
		public static void showContact() {
			boolean theLoop = false;
			String[][] contactStuff = new String[][] {{"Email", "Phone-number"},
			{"Air-Crazed@aircrazedinc.com", "410-729-2249"}};
			while(!theLoop) {
				System.out.println("Welcome to our contact page!");
				System.out.println("How would you like to contact us?");
				for(int i = 0; i < contactStuff[0].length; i++) {
					System.out.println((i +1 ) +" - " +  contactStuff[0][i]);
				}
				System.out.println("0 - Back");
				int answer = Integer.parseInt( userInput.nextLine() );
				if(answer == 0) {
					theLoop = true;
				}
				else if(answer == 1) {
					System.out.println("Our email is: " + contactStuff[1][0]);
				}
				else if(answer == 2) {
					System.out.println("Our phone number is: " + contactStuff[1][1]);
				}
				else {
					System.out.println("That is an invalid option");
				}
			}
		}
    //the tool that helps the user select a plane based on their usage and answers to the questions
		public static void selectionTool(String theName) {
      //lists that store all the possible options along with all the prices for each in a seperate list
			String[] products = new String[]{"Business Jet", "Seaplane", "Taildragger", "Tiltrotor", "Turboprop","Helicopter","Glider","Ultralight","Single-engine Piston", "Stunt Plane"};
			int[] price = new int[] {800000, 600000, 500000, 700000, 650000, 350000, 150000, 200000, 150000, 300000};
			int totalPrice = 0;
			String finalSelection = "";
			System.out.println("\nOk " + theName + " we will help you select your plane based on use! Please type what you see inside of () it is not case sensitive. Are you ready to continue? (1 - Yes or 2 - No)");
			int getStarted = Integer.parseInt( userInput.nextLine() );
			while(getStarted==1) {
				System.out.println("Are you using this plane for business and/or luxerious travel? (1 - Yes or 2 - No)");
				int answer1 = Integer.parseInt( userInput.nextLine() );
				if(answer1==1) {
					System.out.println("The best suggestion is now the Business Jet option.");
					totalPrice = price[0];
					finalSelection = products[0];
					
				}
				else {
					System.out.println("Will you be taking off and landing in water? (1 - Yes or 2 - No)");
					int answer2 = Integer.parseInt( userInput.nextLine() );
					if(answer2==1) {
						System.out.println("The best suggestion is now the Seaplane option.");
						totalPrice = price[1];
						finalSelection = products[1];
						
					}
					else {
						System.out.println("Will you be taking off or be towed into the air? (1 - Take Off or 2 - Towed)");
						int answer3 = Integer.parseInt( userInput.nextLine() );
						if(answer3==2) {
							System.out.println("The best suggestion is now the Glider option.");
							totalPrice = price[6];
							finalSelection = products[6];
							
						}
						else if(answer3==1) {
							System.out.println("Is the airstrip long or short? (1 - Long or 2 - Short)");
							int answer4 = Integer.parseInt( userInput.nextLine() );
							if(answer4==2) {
								System.out.println("The best suggestion is now a Turboprop.");
								totalPrice = price[4];
								finalSelection = products[4];
								
							}
							else if(answer4==1) {
								System.out.println("Is the airstrip paved or not paved? (1 - Paved or 2 - Not)");
								int answer5 = Integer.parseInt( userInput.nextLine() );
								if(answer5==2) {
									System.out.println("The best suggestion is now a Taildragger.");
									totalPrice = price[2];
									finalSelection = products[2];
									
								}
								else if(answer5==1) {
									System.out.println("Are you landing in a remote location? (1 - Yes or 2 - No)");
									int answer6 = Integer.parseInt( userInput.nextLine() );
									if(answer6==1) {
										System.out.println("The best option is now a Tiltroter.");
										totalPrice = price[3];
										finalSelection = products[3];
										
									}
									else {
										System.out.println("Will you be using this plane for stunts? (1 - Yes or 2 - No)");
										int answer7 = Integer.parseInt( userInput.nextLine() );
										if(answer7==1) {
											System.out.println("The best option is now the Stunt Plane");
											totalPrice = price[9];
											finalSelection = products[9];
											
										}
										else {
											System.out.println("Are you SEL certified? (1 - Yes or 2 - No)");
											int answer8 = Integer.parseInt( userInput.nextLine() );
											if(answer8==1) {
												System.out.println("The best option is now the Single-Engine Piston.");
												totalPrice = price[8];
												finalSelection = products[8];
												
											}
											else {
												System.out.println("Are you going a long or short distance? (1 - Short or 2 - Long)");
												int answer9 = Integer.parseInt( userInput.nextLine() );
												if(answer9==2) {
													System.out.println("The best option is now an Ultralight.");
													totalPrice = price[7];
													finalSelection = products[7];
													
												}
												else if(answer9==1) {
													System.out.println("The best option is now a helicopter.");
													totalPrice = price[5];
													finalSelection = products[5];
												
												}
											}
										}
									}
								}
							}
						}
					}
				}
				System.out.println("Would you like to the default package or the package that comes with extra fuel(+$25,000)? (Default or Fuel)");
				String answer10 = userInput.next();
				while(!answer10.equalsIgnoreCase("Default") && !answer10.equalsIgnoreCase("Fuel")) {
					System.out.print("That is not a valid option please try again: ");
					answer10 = userInput.next();
				}
				if(answer10.equalsIgnoreCase("Default")) {
					System.out.println("You chose: " + finalSelection);
					System.out.printf("%s %s %,d","Your total comes to: ","$",totalPrice);
					break;
				}
				else if(answer10.equalsIgnoreCase("Fuel")) {
					totalPrice = totalPrice + 25000;
					System.out.println("You chose: " + finalSelection);
					System.out.printf("%s %s %,d","Your total comes to: ","$",totalPrice);
					break;
				}
			}
		}
    //the method that allows the "manager" to go in and edit the inventory of planes password is "Password1"
		public static void manageInventory() {
			boolean firstLoop = false; 
			while(!firstLoop) {
				String password = "Password1";
				System.out.println("Enter the password: ");
				System.out.println("0 - Go Back");
				String guessPassword = myHelper.getString("");
				if(guessPassword.equalsIgnoreCase("0")) {
					firstLoop = true;
				}
				else if(guessPassword.equals(password)) {
          //five planes added by default
					Planes.planesList.add(new Planes("Red", 8, "AF3D",250000, 100000,"Boeing"));
					Planes.planesList.add(new Planes("Orange", 4, "YU78",750000, 300000,"Piaggio"));
					Planes.planesList.add(new Planes("Green", 8, "OI87",300000, 150000,"Gulfstream"));
					Planes.planesList.add(new Planes("Blue", 12, "PL89",400000, 300000,"Airbus"));
					Planes.planesList.add(new Planes("Blue", 20, "US17",950000, 500000,"Cesna"));
					firstLoop = true;
					boolean nextLoop = false;
					while(!nextLoop) {
						System.out.println("Select one of the following:");
						System.out.println("1 - Add item to inventory");
						System.out.println("2 - Remove item from inventory");
						System.out.println("3 - Show inventory");
						System.out.println("4 - Edit inventory");
						System.out.println("5 - Search");
						System.out.println("0 - Go back");
						int answer = myHelper.getInt("");
						if(answer == 0) {
							nextLoop = true;
						}
						else if(answer == 1) {
							Planes.planesList.add(new Planes() );
						}
						else if(answer == 2) {
							boolean newloop = false;
							while(!newloop) {
								System.out.println("Which item are you going to remove: ");
								for(int i = 0; i < Planes.planesList.size(); i++) {
									System.out.print("Plane " + (i+1) + " - " );
									System.out.print(Planes.planesList.get(i).returnColor());
									System.out.print(" " + Planes.planesList.get(i).returnManufacturer());
									System.out.print(" " + Planes.planesList.get(i).returnCall());
									System.out.println();
								}
								System.out.println("0 - Go back");
								
								int newAnswer = myHelper.getInt("Enter your choice here: ");
								if(newAnswer == 0) {
									newloop = true;
								}
								else if(newAnswer > 0 && newAnswer < Planes.planesList.size()) {
									Planes.planesList.remove(newAnswer - 1);
									System.out.println("Item removed");
								}
							}
							
						}
						else if(answer == 3) {
							for(int i = 0; i < Planes.planesList.size(); i++) {
								System.out.println("Plane " + (i+1) + " :");
								Planes.planesList.get(i).showPlane();
								System.out.println();
								
							}
						}
						else if(answer ==4) {
							boolean newLoop = false;
							while(!newLoop) {
								System.out.println("Which plane will you be editing? ");
								for(int i = 0; i < Planes.planesList.size(); i++) {
									System.out.println("Plane " + (i+1) + " :");
									Planes.planesList.get(i).showPlane();
									System.out.println();
								}
								System.out.println("0 - Go back");
								int theAnswer = myHelper.getInt("Enter your choice here: ");
								
								if(theAnswer == 0) {
									newLoop = true;
								}
								else if(theAnswer > 0 && theAnswer < Planes.planesList.size()) {
									Planes.planesList.get(theAnswer - 1).Edit();
								}
								
							}
						}
						else if(answer ==5) {
							Planes.Search();
						}
					}
				}
				else {
					System.out.println("Incorrect password");
				}
			}
		}




}//end class
//Planes class that is used in the above code
class Planes{
	static ArrayList<Planes> planesList = new ArrayList<Planes>();
	private String planeColor = "";
	private int totalSeats; 
	private String callSign = "";
	private double planePrice;
	private int carryingCapacity;
	private String manufacturer = "";
	//private String differentPlaneTypes = "";
	
	static String[] colorArray = new String[] {"Red","Orange","Green","Blue"};
	static int[] seatNumberArray = new int[] {4, 8, 12, 20};
  
	//method that allows for the assignment of values to the encapsulated variables
	public void addPlane() {
		setColor();
		manufacturer = myHelper.getString("Please enter the manufacturer: ");
		setSeats();
		callSign = myHelper.getString("Callsign: ");
		planePrice = myHelper.getInt("Enter price: ");
		carryingCapacity = myHelper.getInt("Enter carrying capacity: ");
		System.out.println("Plane Added");
		
		
	}
	
	public void showPlane() {
		System.out.println("Color: " + planeColor);
		System.out.println("Manufacturer: " + manufacturer);
		System.out.println("Total Seats: " + totalSeats);
		System.out.println("Callsign: " + callSign);
		System.out.printf("Total Price: $%,.2f %n", planePrice);
		System.out.printf("Carrying Capacity: %,d lbs",carryingCapacity);
		System.out.println();
		
	}
	
	public void Edit() {
		
		System.out.println("What would you like to change " + this.planeColor + " to?");
		this.planeColor = myHelper.getString("Enter the new value here: ");
		System.out.println("What would you like to change " + this.manufacturer + " to?");
		this.manufacturer = myHelper.getString("Enter the new value here: ");
		System.out.println("What would you like to change " + this.totalSeats + " to?");
		this.totalSeats = myHelper.getInt("Enter the new value here: ");
		System.out.println("What would you like to change " + this.callSign + " to?");
		this.callSign = myHelper.getString("Enter the new value here: ");
		System.out.println("What would you like to change " + this.planePrice + " to?");
		this.planePrice = myHelper.getInt("Enter the new value here: ");
		System.out.println("What would you like to change " + this.carryingCapacity + " to?");
		this.carryingCapacity = myHelper.getInt("Enter the new Value here: ");
		
	}
	public String returnColor() {
		return this.planeColor;
	}
	
	public String returnManufacturer() {
		return this.manufacturer;
	}
	public String returnCall() {
		return this.callSign;
	}
	
	//constructor for adding planes where user entry is required
	public Planes() {
		this.addPlane();
	}
  //constructor for adding new planes with pre-assigned attributes, no entries from user
	public Planes(String theColor, int theSeats, String theSign, double thePrice, int theCapacity, String theManufacturer) {
		planeColor = theColor;
		totalSeats = theSeats;
		callSign = theSign;
		planePrice = thePrice;
		carryingCapacity = theCapacity;
		manufacturer = theManufacturer;
		
	}
	//search method for searching by certain attributes that can be changed
	public static void Search() {

		int selection=-1;
		int searchInt;
		String searchTerm;
		
		
		while(selection!=0) {
			System.out.println("What would you like to search?");
			System.out.println("1 - Color");
			System.out.println("2 - Manufacturer");
			System.out.println("3 - Number of Seats");
			System.out.println("4 - Callsign");
			System.out.println("5 - Price");
			System.out.println("6 - Carrying Capacity");
			System.out.println("0 - Go Back");
			
			selection = myHelper.getInt("Enter your choice here: ");
			
			switch(selection) {
			case 0: 
				break;
			case 1: 
				searchTerm = myHelper.getString("Enter the color you would like to search for: ");
				for(int i = 0; i < planesList.size(); i++) {
					if(planesList.get(i).planeColor.equalsIgnoreCase(searchTerm)) {
						planesList.get(i).showPlane();
						System.out.println();
						
						
					}
				}
				break;
			case 2: 
				searchTerm = myHelper.getString("Enter the manufacturer you would like to search for: ");
				for(int i = 0; i < planesList.size(); i++) {
					if(planesList.get(i).manufacturer.equalsIgnoreCase(searchTerm)) {
						planesList.get(i).showPlane();
						System.out.println();
						
					}
				}
				break;
			case 3: 
				searchInt = myHelper.getInt("Enter the number of seats you are searching for: ");
				for(int i = 0; i < planesList.size(); i++) {
					if(planesList.get(i).totalSeats == searchInt) {
						planesList.get(i).showPlane();
						System.out.println();
					
					}
				}
			case 4:
				searchTerm = myHelper.getString("Enter the callsign you are searching for: ");
				for(int i = 0; i < planesList.size(); i++) {
					if(planesList.get(i).callSign.equalsIgnoreCase(searchTerm)) {
						planesList.get(i).showPlane();
						System.out.println();
						
					}
				}
				break;
			case 5: 
				searchInt = myHelper.getInt("Enter the price you are searching for: ");
				for(int i = 0; i < planesList.size(); i++) {
					if(planesList.get(i).planePrice == searchInt) {
						planesList.get(i).showPlane();
						System.out.println();
						
						
					}
				}
				break;
			case 6:
				searchInt = myHelper.getInt("Enter the carrying capacity you are searching for: ");
				for(int i = 0; i < planesList.size(); i++) {
					if(planesList.get(i).carryingCapacity == searchInt) {
						planesList.get(i).showPlane();
						System.out.println();
						
						
					}
				}
				break;
			default: 
				System.out.println("Invalid selection");
			
				
			}
		}
	}
	
	public void setColor() {
		boolean validColor = false;
		while(!validColor) {
			System.out.println("Please select one of the following");
			for(int i = 0; i < colorArray.length; i++) {
				System.out.println((i+1) + " - " + colorArray[i]);
			}
			int selection = myHelper.getInt("Please enter your selection here: ") - 1;
			if(selection >= 0 && selection < colorArray.length) {
				planeColor = colorArray[selection];
				validColor = true;
			}
			else {
				System.out.println("That is not a valid option");
			}
		
		}
	}

	public void setSeats() {
		boolean validSeat = false;
		while(!validSeat) {
			System.out.println("Please select one of the following seating options");
			for(int i = 0; i < seatNumberArray.length; i++) {
				System.out.println((i+1) + " - " + seatNumberArray[i]);
			}
			int selection = myHelper.getInt("Please enter your selection here: ") - 1;
			if(selection >= 0 && selection < seatNumberArray.length) {
				totalSeats = seatNumberArray[selection];
				validSeat = true;
			}
			else {
				System.out.println("That is not a valid option");
			}
		
		}
	}

}

//Helper class for getting integers and strings with error handling already incorporated
class myHelper{
	
	public static Scanner userInput = new Scanner(System.in);
	
	public static int getInt(String myPrompt){
		boolean validNum = false;
		int anyInt = 0;
		
		while(!validNum){
			
			System.out.println(myPrompt);
			
			try{
				anyInt = Integer.parseInt(userInput.nextLine());
				validNum = true;
			}
			catch(NumberFormatException exp1){
	
				System.out.println("You did not enter a valid integer try again.");
			}
		
		}
		
		return anyInt;
	}//End getInt Method
	
	public static String getString(String myPrompt) {
		String tempStr = "";
		System.out.println(myPrompt);
		tempStr = userInput.nextLine();
		return tempStr;
	}//end getString method
}
